# Files in the config/locales directory are used for internationalization
# and are automatically loaded by Rails. If you want to use locales other
# than English, add the necessary files in this directory.
#
# To use the locales, use `I18n.t`:
#
#     I18n.t 'hello'
#
# In views, this is aliased to just `t`:
#
#     <%= t('hello') %>
#
# To use a different locale, set it with `I18n.locale`:
#
#     I18n.locale = :es
#
# This would use the information in config/locales/es.yml.
#
# To learn more, please read the Rails Internationalization guide
# available at http://guides.rubyonrails.org/i18n.html.

en:
  lang: 'en'

  common:
    actions:       'Actions'
    value:         'Value'
    required:      'Required'
    optional:      'Optional'
    username:      'User Name'
    password:      'Password'
    please_select: 'Select one'
    btn:
      architecture:    'Architecture'
      settings:        'Settings'
      user_management: 'User Management'
      login:           'Log in'
      logout:          'Log out'
      submit:          'Submit'
      save_changes:    'Save Changes'
      lang:            'Language'
      previous:        'Previous'
      next:            'Next'
    msg:
      loading:       ' Loading...'
      empty:         '%{name} is empty'
      no_permission: 'Permission denied'
      key_droppable: 'Please either insert a private key or drag-and-drop a file that has a private key stored'


  views:
    pagination:
      first: '&laquo;'
      last: '&raquo;'
      next:  '&rsaquo;'
      previous: '&lsaquo;'
      truncate: '...'

  app_settings:
    log_directory:  'Log directory'
    aws_region:     'Region'
    aws_keypair:    'KeyPair'
    keypair_name:   'Name of KeyPair'
    private_key:    'Secret SSH Key'
    access_key:        'Access Key ID'
    secret_access_key: 'Secret Access Key'
    chef_server:    'Chef Server'

    msg:
      created:          'SkyHopper was successfully setup'
      show:             'Welcome to SkyHopper!'
      log_directory:    'Logs could not be displayed in database will be stored in this directory'
      access_key:          'AWS Access Key ID for SkyHopper System'
      secret_access_key:   'AWS Secret Access Key for SkyHopper System'
      aws_region:       'Regions of AWS available for SkyHopper System'
      aws_keypair:      'SSH key used for SkyHopper System (Registered KeyPair from EC2 console that is linked with API key above)'
    title:
      show:   'Welcome to SkyHopper!'
      setup:  'Setup'
      system: 'System Settings'
      chef:   'Chef Server Settings'
      aws:    'AWS Settings'
    btn:
      create_chefserver: 'Create Chef Server'
      done:              'Done'

  clients:
    client: 'Client'
    code:   'Code'
    name:   'Name'
    btn:
      show_projects: 'Show'
      add:           'New Client'
    msg:
      no_permission:      'Permission denied to utilise "Clients" feature'
      created:            'Client was successfully created.'
      updated:            'Client was successfully updated.'
      deleted:            'Client was successfully deleted.'
      cant_change_system: 'Unable to change client for this system.'


  projects:
    project:           'Project'
    code:              'Code'
    name:              'Name'
    access_key:        'Access Key ID'
    secret_access_key: 'Secret Access Key'
    cloud_provider:    'Cloud Provider'
    btn:
      show_infrastructures: 'Show'
      add:                  'New Project'
    msg:
      created:            'Project was successfully created.'
      updated:            'Project was successfully updated.'
      deleted:            'Project was successfully deleted.'
      cant_delete_system: 'Unable to delete project for this system.'


  infrastructures:
    infrastructure:     'Infrastructure'
    genre:              'Genre'
    stackname:          'Stack Name'
    region:             'Region'
    keypair:            'KeyPair Name'
    sshkey:             'SSH Private Key'
    return_to_projects: 'Return to your projects'
    stack_info:         'Stack Information'
    no_stack_info:      'No stack information.'
    in_progress:        'In progress...'
    database:           'Database'
    runlist:            'Runlist'
    instance_type:      'Instance type'
    add_ec2:            'Add EC2'
    btn:
      delete_stack:         'Delete Stack'
      delete_stack_confirm: 'Execute'
      add:                  'New Infrastructure'
      change_scale:         'Change scale'
      generate_serverspec:  'Generate Serverspec'
      apply_template:       'Apply CloudFormation Template'
      template_history:     'CloudFormation Template History'
      stack_eventlog:       'Stack Eventlog'
      infrastructure_log:   'Operation Log'
    msg:
      created:                     'Infrastructure was successfully created.'
      updated:                     'Infrastructure was successfully updated.'
      detached:                    'Infrastructure was successfully decontrolled.'
      delete_stack_failed:         'Failed to delete stack'
      delete_stack_started:        'Deleting stack started'
      create_stack_failed:         'Failed to create stack'
      detach_stack_confirm:        'Are you sure you want to decontrol this stack?'
      delete_stack_confirm:        'Are you sure you want to delete this stack?'
      help_keypair:                'Please set up a KeyPair to utilise EC2::Instance.'
      no_keypair:                  'KeyPair has not been set'
      no_stack_info:               'Unable to get information for this stack for the following reasons.'
      not_necessary:               "Unnecessary to edit this infrastructure."
      check_intervals:             'Automatic status update: every 15 seconds ...'
      generate_serverspec_confirm: 'Generate serverspec to verify access to RDS Instance?'


  nodes:
    bootstrap:   'Bootstrap'
    cook:        'Cook'
    runlist:     'Runlist'
    recipe:      'Recipe'
    cookbook:    'CookBook'
    role:        'Role'
    statuses:    'Statuses'
    latest_cook_status:       'Latest Cook Status'
    latest_update_status:     'Latest yum command Status'
    latest_serverspec_status: 'Latest Serverspec Status'
    btn:
      edit_runlist: 'Edit Runlist'
      apply_dish: 'Apply Dish'
      bootstrap_with_chef_server: 'Bootstrap with Chef Server'
      instance_settings: 'Settings'
    msg:
      before_bootstrap:   'This instance is not bootstrapped with Chef Server.'
      no_dishes:          "No valid dishes available."
      cooking:            'Cook being executed...'
      updating:           'yum command is in progress...'
      bootstrap_finish:   '%{physical_id} was successfully registered in Chef Server.'
      not_change_scale:   "Unnecessary to change to '%{type}'"
      changed_scale:      'Change scale to %{type}'
      runlist_updated:    'Runlist was successfully updated.'
      runlist_applying:   'Runlist is being applied...'
      cook_started:       'Cook was successfully started'
      attribute_updated:  'Attribute was successfully updated.'
      yum_update_confirm: 'Are you sure you want to execute yum command?'
      yum_update_started: 'yum command is started.'
      attr_not_exists:    'Available attributes does not exists'


  dishes:
    dishes:            'Dishes'
    dish:              'Dish'
    name:              'Name'
    detail:            'Detail'
    validation_status: 'Validation Status'
    validate:          'Validate'
    btn:
      add: 'Add Dish'
    msg:
      updated:                'Dish was successfully updated.'
      created:                'Dish was successfully created.'
      deleted:                'Dish was successfully deleted.'
      description:            'Dish is a preset of configuration for EC2 Instance.'
      no_serverspec_selected: 'No serverspecs selected.'


  serverspecs:
    name:        'Name'
    serverspecs: 'Serverspecs'
    serverspec:  'Serverspec'
    description: 'Description'
    value:       'Value'
    auto_generated: 'Auto generated Serverspecs'
    global:      'Global'
    individual:  'Infrastructure Individual'
    select_serverspec: 'Select Serverspecs'
    btn:
      add:    'Add Serverspec'
      create: 'Create Serverspec'
      run:    'Run Serverspecs'
    msg:
      created:   'Serverspec was successfully created.'
      updated:   'Serverspec was successfully updated.'
      deleted:   'Serverspec was successfully deleted'
      parseerr:  'Something wrong with Serverspec.'
      success:   'Serverspec for %{physical_id} is successfully finished.'
      pending:   'Serverspec for %{physical_id} is successfully finished. Pending specs: %{pending_specs}'
      failure:   'Serverspec for %{physical_id} is failed. failure specs: %{failure_specs}'
      generated: 'Serverspec is successfully generated.'
      auto_generated_enabled_html:  '<small>This Serverspec was created automatically by "<em>serverspec-handler</em>" cookbook.</small>'
      auto_generated_disabled_html: '<small>This option is available only when runlist includes "<em>serverspec-handler</em>" cookbook.</small>'


  cf_templates:
    cf_templates: 'CloudFormation Templates'
    cf_template:  'CloudFormation Template'
    subject:      'Subject'
    details:      'Details'
    operator:     'Operator'
    parameters:   'Parameters'
    history:      'History'
    global:       'Presets'
    insert_parameters: 'Set Parameters'
    enable_property:   'Use this property'
    parameterize:      'Parameterize this property'
    btn:
      add:              'Add Template'
      send:             'Send'
    msg:
      keypair_missing: 'Please set up a KeyPair to utilise EC2::Instance.'
      created:         'Template was successfully created.'
      updated:         'Template was successfully updated.'
      deleted:         'Template was successfully deleted.'
      updating:        'Updating stack'
      creating:        'Creating stack'


  template_builder:
    btn:
      add_resource: 'Add this resource'
    template_builder: 'Template Builder'
    resources:        'Resources'
    select_resources: 'Select Resource'
    enable:           'Enable'
    disable:          'Disable'

  monitoring:
    title:                'Monitoring'
    config:               'Monitoring Configuration'
    select:               'Monitoring Options'
    trigger:              'Setting threshold'
    explanation_triggers: 'Description of each threshold'
    register_host:        'Register host to Zabbix'
    btn:
      create: 'Create Host'
      add:    'Add'
      edit:   'Edit'
      delete: 'Delete'
    msg:
      host_creating:           'Creating Host...'
      before_create_host:      'This infrastructure has not been registered on Zabbix Server'
      created:                 'This infrastructure has been registered on Zabbix Server'
      failure:                 'Failed to register on Zabbix'
      not_selected:            'Monitoring options not selected yet'
      invalid_parameters:      'Owing to incorrect username or password, cannot connect Zabbix'
      not_running:             'Zabbix is not running'
      trigger_setting_warning: 'Threshold will be updated only the selected item'
      # TODO: translation!
      # no_data: |
      #   データが取得出来ませんでした。
      #     1. Zabbix Agentをインストール後直ぐにデータは取得出来ません。時間をおいて再度試して下さい。
      #     2. サーバーに必要なパッケージがインストールされていない可能性があります(MySQL Server, Client etc)。ご確認下さい。
    # explanations:
    #   cpu:                      ' CPU の過去一分間の使用率が一定の値を超えた時にアラートを鳴らします'
    #   ram:                      'メモリの過去一分間の使用率が一定の値を超えた時にアラートを鳴らします'
    #   loadaverage:              '過去一分間のロードアベレージが一定の値を超えた時にアラートを鳴らします'
    #   swap:                     ' SWAP の過去一分間の使用率がある一定の値を超えた時にアラートを鳴らします'
    #   http:                     ' HTTP の応答監視及び応答コードを監視致します'
    #   smtp:                     ' SMTP の応答監視及び応答コードを監視致します'
    #   url:                      'ご指定がの FQDN のハッシュ値もしくは特定文字列があるか監視致します'
    #   mysql:                    ' MySQL アカウントを作成し、MySQLへのログイン可能か監視致します'
    #   postgresql:               ' PosgreSQL アカウントを作成し,  PosgreSQL へのログイン可能か監視致します'


  users:
    title:             'User Management'
    user:              'User'
    role:              'Role'
    email:             'E-Mail'
    last_signed_in_at: 'Last signed in at'
    you:               'YOU'
    edit:              'Edit Permissions'
    allowed_projects:  'Allowed Projects'
    unregistered:      'Unregistered'
    btn:
      add: 'Add User'
      sync: 'Synchronize with Zabbix'
    msg:
      role: 'Master users can see all the infrastructures. Admin users can change assigned infrastructures.'
      created:     'An account was successfully created.'
      updated:     'An account was successfully updated.'
      deleted:     'An account was successfully deleted.'
      synced:      'All accounts was successfully synchronized with Zabbix.'
      only_master: 'User Management feature is only permitted to Master users.'
      confirm_sync_zabbix: 'Do you synchronize with Zabbix?'


  chef_servers:
    msg:
      creating_infra: 'Creating Infrastructure...'
      creating_stack: 'Creating Stack...'
      init_ec2:       'Initializing EC2 Instance...'
      install_chef:   'Installing Chef Server...'
      setting_chef:   'Setting Chef Server...'
      complete:       'Chef Server was successfully built. Copy from RAILS_ROOT/tmp/chef/ to ~/.chef/'
      confirm_start:  'Do you want to start Chef Server?'
      confirm_stop:   'Do you want to stop Chef Server?'
      start:          'Stopping Chef Server...'
      stop:           'Starting Chef Server...'
      not_running:    'Chef Server is not running.'

  zabbix_servers:
    msg:
      creating_infra: 'Creating Infrastructure...'
      creating_stack: 'Creating Stack...'
      init_ec2:       'Initializing EC2 Instance...'
      install_zabbix: 'Installing Zabbix Server...'
      setting_zabbix: 'Setting Zabbix Server...'
      complete:       'Zabbix Server was successfully built.'
      confirm_start:  'Do you want to start Zabbix Server?'
      confirm_stop:   'Do you want to stop Zabbix Server?'
      start:          'Stopping Zabbix Server...'
      stop:           'Starting Zabbix Server...'
      not_running:    'Zabbix Server is not running.'

  ec2_instances:
    description: 'Description'
    settings:    'Settings'

  resources:
    screen_name: 'Screen Name'
    msg:
      created: 'Resource was successfully created.'
